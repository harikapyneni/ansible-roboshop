- name: install shipping component
  hosts: shipping
  become: yes
  tasks:
  
  - name: install maven 
    ansible.builtin.yum:
      name: maven
      state: installed

  - name: check if user roboshop exists or not
    ansible.builtin.command: id roboshop
    register: out # out is variable
    ignore_errors: true # for ignore errors in the execution without exiting

  - when: out.rc !=0
    name: create user roboshop
    become: yes
    ansible.builtin.user:
      name: roboshop

  - name: check /app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory
  
  - name: print directory stats
    ansible.builtin.debug:
      msg: "output is : {{directory}}" 

  - when: directory.stat.exists == false
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download and extract shipping artifact
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app  #chdir-->change directory

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service 
      dest: /etc/systemd/system/shipping.service

  - name: daemon reload
    ansible.builtin.systemd:
    daemon_reload: true

  - name: restart shipping service
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: yes

  - name: install mysql client
    ansible.builtin.yum: 
     name: mysql
     state: installed 
     #execute untill here 

 
    